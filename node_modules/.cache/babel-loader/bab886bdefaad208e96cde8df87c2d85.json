{"ast":null,"code":"var _jsxFileName = \"/home/mazur/Documents/myTestWorks/todo-list-react-redux/src/components/Todos/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodo: obj => dispatch(addTodos(obj))\n  };\n};\n\nconst Todos = props => {\n  _s();\n\n  const [todo, setTodo] = useState(\"\");\n\n  const handleChange = e => {\n    setTodo(e.target.value);\n  };\n\n  console.log(\"props from store\", props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addTodos\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => handleChange(e),\n      className: \"todo-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: () => props.addTodo({\n        id: Math.floor(Math.random() * 1000),\n        item: todo,\n        complited: false\n      }),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todos, \"QLafgrWcgCBY6x1sYeV9eOohYiM=\");\n\n_c = Todos;\nexport default connect(mapDispatchToProps)(Todos);\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/home/mazur/Documents/myTestWorks/todo-list-react-redux/src/components/Todos/index.js"],"names":["useState","connect","mapDispatchToProps","dispatch","addTodo","obj","addTodos","Todos","props","todo","setTodo","handleChange","e","target","value","console","log","id","Math","floor","random","item","complited"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,aAAP;;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,OAAO,EAAGC,GAAD,IAASF,QAAQ,CAACG,QAAQ,CAACD,GAAD,CAAT;AADvB,GAAP;AAGH,CAJD;;AAMA,MAAME,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,KAAhC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAGI,CAAD,IAAOD,YAAY,CAACC,CAAD,CAFjC;AAGI,MAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AACI,MAAA,SAAS,EAAC,SADd;AAEI,MAAA,OAAO,EAAE,MAAMJ,KAAK,CAACJ,OAAN,CAAc;AACzBa,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADqB;AAEzBC,QAAAA,IAAI,EAAEZ,IAFmB;AAGzBa,QAAAA,SAAS,EAAE;AAHc,OAAd,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAkBI;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAvCD;;GAAMf,K;;KAAAA,K;AAyCN,eAAeN,OAAO,CAACC,kBAAD,CAAP,CAA4BK,KAA5B,CAAf","sourcesContent":["import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './index.css';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTodo: (obj) => dispatch(addTodos(obj)),\n    }\n}\n\nconst Todos = (props) => {\n\n    const [todo, setTodo] = useState(\"\");\n\n    const handleChange = (e) => {\n        setTodo(e.target.value);\n    }\n    console.log(\"props from store\", props);\n\n    return (\n        <div className=\"addTodos\">\n            <input\n                type=\"text\"\n                onChange={(e) => handleChange(e)}\n                className=\"todo-input\"\n            />\n\n            <button\n                className=\"add-btn\"\n                onClick={() => props.addTodo({\n                    id: Math.floor(Math.random() * 1000),\n                    item: todo,\n                    complited: false,\n                })}\n            >\n                Add\n            </button>\n\n            <br />\n\n            {/* <ul>\n                {props.todos.map((item) => {\n                    return (\n                        \n                    )\n                })}\n            </ul> */}\n        </div>\n    )\n}\n\nexport default connect(mapDispatchToProps)(Todos);"]},"metadata":{},"sourceType":"module"}