{"ast":null,"code":"var _jsxFileName = \"/home/mazur/Documents/myTestWorks/todo-list-react-redux/src/components/Todos/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodos } from '../../redux/reducer';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    todos: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodo: obj => dispatch(addTodos(obj))\n  };\n};\n\nconst Todos = props => {\n  _s();\n\n  const [todo, setTodo] = useState(\"\");\n\n  const handleChange = e => {\n    setTodo(e.target.value);\n  }; // console.log(\"props from store\", props);\n\n\n  const add = () => {\n    if (todo === \"\") {\n      alert(\"Input is Empty\");\n    } else {\n      props.addTodo({\n        id: Math.floor(Math.random() * 1000),\n        item: todo,\n        completed: false\n      });\n      setTodo(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addTodos\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => handleChange(e),\n      className: \"todo-input\",\n      value: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: () => add(),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todos, \"QLafgrWcgCBY6x1sYeV9eOohYiM=\");\n\n_c = Todos;\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/home/mazur/Documents/myTestWorks/todo-list-react-redux/src/components/Todos/index.js"],"names":["useState","connect","addTodos","mapStateToProps","state","todos","mapDispatchToProps","dispatch","addTodo","obj","Todos","props","todo","setTodo","handleChange","e","target","value","add","alert","id","Math","floor","random","item","completed"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,aAAP;;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED;AADJ,GAAP;AAGH,CAJD;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,OAAO,EAAGC,GAAD,IAASF,QAAQ,CAACL,QAAQ,CAACO,GAAD,CAAT;AADvB,GAAP;AAGH,CAJD;;AAMA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD,CAJqB,CAOrB;;;AAEA,QAAMC,GAAG,GAAG,MAAM;AACd,QAAIN,IAAI,KAAK,EAAb,EAAiB;AACbO,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACH,KAFD,MAEO;AACHR,MAAAA,KAAK,CAACH,OAAN,CAAc;AACVY,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADM;AAEVC,QAAAA,IAAI,EAAEZ,IAFI;AAGVa,QAAAA,SAAS,EAAE;AAHD,OAAd;AAKAZ,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAGE,CAAD,IAAOD,YAAY,CAACC,CAAD,CAFjC;AAGI,MAAA,SAAS,EAAC,YAHd;AAII,MAAA,KAAK,EAAEH;AAJX;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAMM,GAAG,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlCD;;GAAMR,K;;KAAAA,K;AAoCN,eAAeT,OAAO,CAACE,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CI,KAA7C,CAAf","sourcesContent":["import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodos } from '../../redux/reducer';\nimport './index.css';\n\n\nconst mapStateToProps = (state) => {\n    return {\n        todos: state,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTodo: (obj) => dispatch(addTodos(obj)),\n    }\n}\n\nconst Todos = (props) => {\n\n    const [todo, setTodo] = useState(\"\");\n\n    const handleChange = (e) => {\n        setTodo(e.target.value);\n    }\n    // console.log(\"props from store\", props);\n\n    const add = () => {\n        if (todo === \"\") {\n            alert(\"Input is Empty\");\n        } else {\n            props.addTodo({\n                id: Math.floor(Math.random() * 1000),\n                item: todo,\n                completed: false,\n            });\n            setTodo(\"\");\n        }\n    };\n\n    return (\n        <div className=\"addTodos\">\n            <input\n                type=\"text\"\n                onChange={(e) => handleChange(e)}\n                className=\"todo-input\"\n                value={todo}\n            />\n            <button className=\"add-btn\" onClick={() => add()}>Add</button>\n            <br />\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);"]},"metadata":{},"sourceType":"module"}