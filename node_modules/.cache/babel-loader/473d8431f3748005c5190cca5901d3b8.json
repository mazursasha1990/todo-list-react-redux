{"ast":null,"code":"var _jsxFileName = \"/home/mazur/Documents/myTestWorks/todo-list-react-redux/src/components/Todos/index.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodos, removeTodos } from '../../redux/reducer';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    todos: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodo: obj => dispatch(addTodos(obj)),\n    removeTodo: id => dispatch(removeTodos(id))\n  };\n};\n\nconst Todos = props => {\n  _s();\n\n  const [todo, setTodo] = useState(\"\");\n  const inputRef = useRef(true);\n\n  const changeFocus = () => {\n    inputRef.current.disabled = false;\n    inputRef.current.focus();\n  };\n\n  const update = () => {};\n\n  const handleChange = e => {\n    setTodo(e.target.value);\n  };\n\n  console.log(\"props from store\", props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addTodos\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => handleChange(e),\n      className: \"todo-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: () => props.addTodo({\n        id: Math.floor(Math.random() * 1000),\n        item: todo,\n        complited: false\n      }),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.todos.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: inputRef,\n            disabled: inputRef,\n            defaultValue: item.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeFocus(),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => props.removeTodo(item.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), \" \"]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todos, \"wpVKThV2lB9VUeY4De1ihlJoL8c=\");\n\n_c = Todos;\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/home/mazur/Documents/myTestWorks/todo-list-react-redux/src/components/Todos/index.js"],"names":["useRef","useState","connect","addTodos","removeTodos","mapStateToProps","state","todos","mapDispatchToProps","dispatch","addTodo","obj","removeTodo","id","Todos","props","todo","setTodo","inputRef","changeFocus","current","disabled","focus","update","handleChange","e","target","value","console","log","Math","floor","random","item","complited","map"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,OAAO,aAAP;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED;AADJ,GAAP;AAGH,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,OAAO,EAAGC,GAAD,IAASF,QAAQ,CAACN,QAAQ,CAACQ,GAAD,CAAT,CADvB;AAEHC,IAAAA,UAAU,EAAGC,EAAD,IAAQJ,QAAQ,CAACL,WAAW,CAACS,EAAD,CAAZ;AAFzB,GAAP;AAIH,CALD;;AAOA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMiB,QAAQ,GAAGlB,MAAM,CAAC,IAAD,CAAvB;;AACA,QAAMmB,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,QAAjB,GAA4B,KAA5B;AACAH,IAAAA,QAAQ,CAACE,OAAT,CAAiBE,KAAjB;AACH,GAHD;;AAIA,QAAMC,MAAM,GAAG,MAAM,CAEpB,CAFD;;AAGA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBR,IAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCd,KAAhC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAGU,CAAD,IAAOD,YAAY,CAACC,CAAD,CAFjC;AAGI,MAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AACI,MAAA,SAAS,EAAC,SADd;AAEI,MAAA,OAAO,EAAE,MAAMV,KAAK,CAACL,OAAN,CAAc;AACzBG,QAAAA,EAAE,EAAEiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADqB;AAEzBC,QAAAA,IAAI,EAAEjB,IAFmB;AAGzBkB,QAAAA,SAAS,EAAE;AAHc,OAAd,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAgBI;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAkBI;AAAA,gBACKnB,KAAK,CAACR,KAAN,CAAY4B,GAAZ,CAAiBF,IAAD,IAAU;AACvB,4BAAO;AAAA,kCACH;AACI,YAAA,GAAG,EAAEf,QADT;AAEI,YAAA,QAAQ,EAAEA,QAFd;AAGI,YAAA,YAAY,EAAEe,IAAI,CAACA;AAHvB;AAAA;AAAA;AAAA;AAAA,kBADG,eAMH;AACI,YAAA,OAAO,EAAE,MAAMd,WAAW,EAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANG,eAWH;AACI,YAAA,OAAO,EAAE,MAAMJ,KAAK,CAACH,UAAN,CAAiBqB,IAAI,CAACpB,EAAtB,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXG,EAeO,GAfP;AAAA,WAASoB,IAAI,CAACpB,EAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AAiBH,OAlBA;AADL;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH,CA1DD;;GAAMC,K;;KAAAA,K;AA4DN,eAAeZ,OAAO,CAACG,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CM,KAA7C,CAAf","sourcesContent":["import { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodos, removeTodos } from '../../redux/reducer';\nimport './index.css';\n\nconst mapStateToProps = (state) => {\n    return {\n        todos: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTodo: (obj) => dispatch(addTodos(obj)),\n        removeTodo: (id) => dispatch(removeTodos(id))\n    }\n}\n\nconst Todos = (props) => {\n\n    const [todo, setTodo] = useState(\"\");\n    const inputRef = useRef(true);\n    const changeFocus = () => {\n        inputRef.current.disabled = false;\n        inputRef.current.focus();\n    }\n    const update = () => {\n\n    }\n    const handleChange = (e) => {\n        setTodo(e.target.value);\n    }\n    console.log(\"props from store\", props);\n\n    return (\n        <div className=\"addTodos\">\n            <input\n                type=\"text\"\n                onChange={(e) => handleChange(e)}\n                className=\"todo-input\"\n            />\n            <button\n                className=\"add-btn\"\n                onClick={() => props.addTodo({\n                    id: Math.floor(Math.random() * 1000),\n                    item: todo,\n                    complited: false,\n                })}\n            >\n                Add\n            </button>\n            <br />\n\n            <ul>\n                {props.todos.map((item) => {\n                    return <li key={item.id}>\n                        <textarea\n                            ref={inputRef}\n                            disabled={inputRef}\n                            defaultValue={item.item}\n                        />\n                        <button\n                            onClick={() => changeFocus()}\n                        >\n                            Edit\n                        </button>\n                        <button\n                            onClick={() => props.removeTodo(item.id)}\n                        >\n                            Delete\n                        </button>{\" \"}\n                    </li>\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);"]},"metadata":{},"sourceType":"module"}