{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { act } from \"react-dom/test-utils\";\nconst initialState = [];\nconst addTodoReducer = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      state.push(action.payload);\n      return state;\n    },\n    removeTodos: (state, action) => {\n      return state.filter(item => item.id !== action.payload);\n    },\n    updateTodos: (state, action) => {\n      return state.map(todo => {\n        if (todo.id === action.payload.id) {\n          return { ...todo,\n            item: action.payload.item\n          };\n        }\n\n        return todo;\n      });\n    }\n  }\n});\nexport const {\n  addTodos,\n  removeTodos\n} = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;","map":{"version":3,"sources":["/home/mazur/Documents/myTestWorks/todo-list-react-redux/src/redux/reducer.js"],"names":["createSlice","act","initialState","addTodoReducer","name","reducers","addTodos","state","action","push","payload","removeTodos","filter","item","id","updateTodos","map","todo","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,GAAT,QAAoB,sBAApB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,cAAc,GAAGH,WAAW,CAAC;AAC/BI,EAAAA,IAAI,EAAE,OADyB;AAE/BF,EAAAA,YAF+B;AAG/BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACA,aAAOH,KAAP;AACH,KAJK;AAMNI,IAAAA,WAAW,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC5B,aAAOD,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAA1C,CAAP;AACH,KARK;AAUNK,IAAAA,WAAW,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC5B,aAAOD,KAAK,CAACS,GAAN,CAAUC,IAAI,IAAI;AACrB,YAAIA,IAAI,CAACH,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeI,EAA/B,EAAmC;AAC/B,iBAAO,EACH,GAAGG,IADA;AAEHJ,YAAAA,IAAI,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAFlB,WAAP;AAIH;;AACD,eAAOI,IAAP;AACH,OARM,CAAP;AASH;AApBK;AAHqB,CAAD,CAAlC;AA2BA,OAAO,MAAM;AAAEX,EAAAA,QAAF;AAAYK,EAAAA;AAAZ,IAA4BR,cAAc,CAACe,OAAjD;AACP,OAAO,MAAMC,OAAO,GAAGhB,cAAc,CAACgB,OAA/B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { act } from \"react-dom/test-utils\";\n\nconst initialState = [];\n\nconst addTodoReducer = createSlice({\n    name: \"todos\",\n    initialState,\n    reducers: {\n        addTodos: (state, action) => {\n            state.push(action.payload);\n            return state;\n        },\n\n        removeTodos: (state, action) => {\n            return state.filter((item) => item.id !== action.payload);\n        },\n\n        updateTodos: (state, action) => {\n            return state.map(todo => {\n                if (todo.id === action.payload.id) {\n                    return {\n                        ...todo,\n                        item: action.payload.item,\n                    }\n                }\n                return todo;\n            })\n        }\n    }\n})\n\nexport const { addTodos, removeTodos } = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;"]},"metadata":{},"sourceType":"module"}