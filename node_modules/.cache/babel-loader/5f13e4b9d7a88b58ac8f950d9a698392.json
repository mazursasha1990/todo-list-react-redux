{"ast":null,"code":"var _jsxFileName = \"/home/mazur/Documents/myTestWorks/todo-list-react-redux/src/components/DisplayTodos/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { completeTodos, removeTodos, updateTodos } from '../../redux/reducer';\nimport TodoItem from '../TodoItem';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    todos: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // addTodo: (obj) => dispatch(addTodos(obj)),\n    removeTodo: id => dispatch(removeTodos(id)),\n    updateTodo: obj => dispatch(updateTodos(obj)),\n    completeTodo: id => dispatch(completeTodos(id))\n  };\n};\n\nconst DisplayTodos = props => {\n  _s();\n\n  const [sort, setSort] = useState(\"active\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"displayTodos\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSort(\"active\"),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSort(\"completed\"),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSort(\"all\"),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [props.todos.length > 0 && sort === \"active\" ? props.todos.map(item => {\n        return item.completed === false && /*#__PURE__*/_jsxDEV(TodoItem, {\n          item: item,\n          removeTodo: props.removeTodo,\n          updateTodo: props.updateTodo,\n          completeTodo: props.completeTodo\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this);\n      }) : null, props.todos.length > 0 && sort === \"completed\" ? props.todos.map(item => {\n        return item.completed === true && /*#__PURE__*/_jsxDEV(TodoItem, {\n          item: item,\n          removeTodo: props.removeTodo,\n          updateTodo: props.updateTodo,\n          completeTodo: props.completeTodo\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this);\n      }) : null, props.todos.length > 0 && sort === \"all\" ? props.todos.map(item => {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          item: item,\n          removeTodo: props.removeTodo,\n          updateTodo: props.updateTodo,\n          completeTodo: props.completeTodo\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DisplayTodos, \"XnD3V048DS81/GO+aD2ZAU4AuWw=\");\n\n_c = DisplayTodos;\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodos);\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayTodos\");","map":{"version":3,"sources":["/home/mazur/Documents/myTestWorks/todo-list-react-redux/src/components/DisplayTodos/index.js"],"names":["useState","connect","completeTodos","removeTodos","updateTodos","TodoItem","mapStateToProps","state","todos","mapDispatchToProps","dispatch","removeTodo","id","updateTodo","obj","completeTodo","DisplayTodos","props","sort","setSort","length","map","item","completed"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { completeTodos, removeTodos, updateTodos } from '../../redux/reducer';\nimport TodoItem from '../TodoItem';\n\nimport './index.css';\n\nconst mapStateToProps = (state) => {\n    return {\n        todos: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // addTodo: (obj) => dispatch(addTodos(obj)),\n        removeTodo: (id) => dispatch(removeTodos(id)),\n        updateTodo: (obj) => dispatch(updateTodos(obj)),\n        completeTodo: (id) => dispatch(completeTodos(id)),\n    }\n}\n\nconst DisplayTodos = (props) => {\n    const [sort, setSort] = useState(\"active\")\n    return (\n        <div className=\"displayTodos\">\n            <div className=\"buttons\">\n                <button onClick={() => setSort(\"active\")}>Active</button>\n                <button onClick={() => setSort(\"completed\")}>Completed</button>\n                <button onClick={() => setSort(\"all\")}>All</button>\n            </div>\n            <ul>\n                {props.todos.length > 0 && sort === \"active\"\n                    ? props.todos.map(item => {\n                        return (\n                            item.completed === false &&\n                            <TodoItem\n                                key={item.id}\n                                item={item}\n                                removeTodo={props.removeTodo}\n                                updateTodo={props.updateTodo}\n                                completeTodo={props.completeTodo}\n                            />\n                        )\n                    })\n                    : null}\n\n                {props.todos.length > 0 && sort === \"completed\"\n                    ? props.todos.map(item => {\n                        return (\n                            item.completed === true &&\n                            <TodoItem\n                                key={item.id}\n                                item={item}\n                                removeTodo={props.removeTodo}\n                                updateTodo={props.updateTodo}\n                                completeTodo={props.completeTodo}\n                            />\n                        )\n                    })\n                    : null}\n\n                {props.todos.length > 0 && sort === \"all\"\n                    ? props.todos.map(item => {\n                        return (\n                            <TodoItem\n                                key={item.id}\n                                item={item}\n                                removeTodo={props.removeTodo}\n                                updateTodo={props.updateTodo}\n                                completeTodo={props.completeTodo}\n                            />\n                        )\n                    })\n                    : null}\n            </ul>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodos);"]},"metadata":{},"sourceType":"module"}